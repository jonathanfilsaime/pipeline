# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  print_pipeline_id:
    description: "print pipeline id"
    parameters:
      to:
        default: "world"
        type: string
    steps:
      - run: echo <<parameters.to>>


# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - print_pipeline_id:
          to: $CIRCLE_WORKFLOW_ID
      - run:
          name: "Say hello"
          command: echo "Hello, World!"

  print_hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - print_pipeline_id
      - run:
          name: "print hello"
          command: echo "print hello!"

  print_world:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - print_pipeline_id
      - run:
          name: "print world"
          command: echo "print world!"

  print_env_variable:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout 
      - print_pipeline_id
      - run:
          name: "print env variable"
          command: echo $MY_ENV_2
  
  save_hello_world_output:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout 
      - print_pipeline_id
      - run:
          name: "save hello world output"
          command: echo "hello world" > output.txt
      - persist_to_workspace:
          root: .
          paths:
              - ./output.txt

  print_output_file:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout 
      - print_pipeline_id
      - attach_workspace:
          at: .
      - run:
          name: "print output file"
          command: cat output.txt
      

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  version: 2
  say-hello-workflow:
    jobs:
      - say-hello
      - print_hello:
          requires:
          - say-hello
      - print_world
      - print_env_variable
      - save_hello_world_output
      - print_output_file:
          requires:
          - save_hello_world_output
